{"name": "test_UserAccount", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <pages.userRegistrationScreen.CreateAccount object at 0x000002C418DA0D60>\nlocatorValue = \"//input[@id='id_gender1']\", locatorType = 'xpath'\n\n    def waitForElement(self, locatorValue, locatorType=\"id\"):\n        webElement = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 35, poll_frequency=1,\n                                 ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n>           webElement = wait.until(ec.presence_of_element_located((locatorByType, locatorValue)))\n\n..\\base\\basefile.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"ad43ca24a1c3bcf892e48c4afc2a139d\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000002C418D55B40>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except InvalidSelectorException as e:\n                raise e\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x01135FD3+2187219]\nE       \tOrdinal0 [0x010CE6D1+1763025]\nE       \tOrdinal0 [0x00FE3E78+802424]\nE       \tOrdinal0 [0x01011C10+990224]\nE       \tOrdinal0 [0x01011EAB+990891]\nE       \tOrdinal0 [0x0103EC92+1174674]\nE       \tOrdinal0 [0x0102CBD4+1100756]\nE       \tOrdinal0 [0x0103CFC2+1167298]\nE       \tOrdinal0 [0x0102C9A6+1100198]\nE       \tOrdinal0 [0x01006F80+946048]\nE       \tOrdinal0 [0x01007E76+949878]\nE       \tGetHandleVerifier [0x013D90C2+2721218]\nE       \tGetHandleVerifier [0x013CAAF0+2662384]\nE       \tGetHandleVerifier [0x011C137A+526458]\nE       \tGetHandleVerifier [0x011C0416+522518]\nE       \tOrdinal0 [0x010D4EAB+1789611]\nE       \tOrdinal0 [0x010D97A8+1808296]\nE       \tOrdinal0 [0x010D9895+1808533]\nE       \tOrdinal0 [0x010E26C1+1844929]\nE       \tBaseThreadInitThunk [0x761DFA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77BB7A7E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77BB7A4E+238]\n\nC:\\Users\\ajinkyas.shukla_info\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:89: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <pages.userRegistrationScreen.CreateAccount object at 0x000002C418DA0D60>\nlocatorValue = \"//input[@id='id_gender1']\", locatorType = 'xpath'\n\n    def clickOnElement(self, locatorValue, locatorType=\"id\"):\n        try:\n            locatorType = locatorType.lower()\n>           webElement = self.waitForElement(locatorValue, locatorType)\n\n..\\base\\basefile.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.userRegistrationScreen.CreateAccount object at 0x000002C418DA0D60>\nlocatorValue = \"//input[@id='id_gender1']\", locatorType = 'xpath'\n\n    def waitForElement(self, locatorValue, locatorType=\"id\"):\n        webElement = None\n        try:\n            locatorType = locatorType.lower()\n            locatorByType = self.getLocatorType(locatorType)\n            wait = WebDriverWait(self.driver, 35, poll_frequency=1,\n                                 ignored_exceptions=[ElementNotVisibleException, NoSuchElementException])\n            webElement = wait.until(ec.presence_of_element_located((locatorByType, locatorValue)))\n            self.log.info(\"WebElement found with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n        except:\n            self.log.error(\n                \"WebElement not found with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n            print_stack()\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\basefile.py:80: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test.test_CreateAccount.CreateAccountTest testMethod=test_UserAccount>\n\n    @pytest.mark.run(order=3)\n    def test_UserAccount(self):\n    \n        time.sleep(6)\n>       self.ca.selectGenderAsMale()\n\n..\\test\\test_CreateAccount.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\pages\\userRegistrationScreen.py:46: in selectGenderAsMale\n    self.clickOnElement(self._selectGenderMale, \"xpath\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.userRegistrationScreen.CreateAccount object at 0x000002C418DA0D60>\nlocatorValue = \"//input[@id='id_gender1']\", locatorType = 'xpath'\n\n    def clickOnElement(self, locatorValue, locatorType=\"id\"):\n        try:\n            locatorType = locatorType.lower()\n            webElement = self.waitForElement(locatorValue, locatorType)\n            webElement.click()\n            self.log.info(\n                \"Clicked on WebElement with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n        except:\n            self.log.error(\n                \"Unable to Click on WebElement with locator value \" + locatorValue + \" using locatorType \" + locatorType)\n            print_stack()\n            self.takeScreenshot(locatorType)\n>           assert False\nE           AssertionError\n\n..\\base\\basefile.py:95: AssertionError"}, "attachments": [{"name": "xpath", "source": "ece0f4f7-7539-43d0-9532-35951ca64c5b-attachment.png", "type": "image/png"}, {"name": "xpath", "source": "4b88d575-8e0f-46f4-90a9-e2e0d36755be-attachment.png", "type": "image/png"}, {"name": "log", "source": "6ba27816-fa39-4b23-a829-53dd8f7a5a4b-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "d5bc9943-cef9-485d-802f-a0bf1a477b91-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "d540377f-e40b-48c2-aae9-5529bb690bdd-attachment.txt", "type": "text/plain"}], "start": 1658751217909, "stop": 1658751261198, "uuid": "7171ee6f-16ca-40a1-a7d3-19899d709aac", "historyId": "827bda04f4028f27f3f60b5721979e7e", "testCaseId": "13bf41cfcea8a91226029affc12f2838", "fullName": "test.TestSuite.CreateAccountTest#test_UserAccount", "labels": [{"name": "tag", "value": "run(order=3)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('beforeClass', 'beforeMethod')"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "TestSuite"}, {"name": "subSuite", "value": "CreateAccountTest"}, {"name": "host", "value": "IB-SEZ-LAP-826"}, {"name": "thread", "value": "19540-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.TestSuite"}]}